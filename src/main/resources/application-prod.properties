# Listen on the port passed through `PORT` environment variable (Fallback to 8080)
#server.port= ${PORT:8080}
server.port= 5000

spring.datasource.url= jdbc:mysql://${rds.hostname}:${rds.port}/booklydb?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false&allowPublicKeyRetrieval=true
spring.datasource.username= ${rds.username}
spring.datasource.password= ${rds.password}
spring.datasource.initialization-mode= always
spring.datasource.platform= mysql
#if you want ot upload test data create data.sql. if below is uncommented then data.sql will be executed
spring.datasource.schema= classpath:/schema-${spring.datasource.platform}.sql
spring.datasource.continue-on-error= true

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.MySQL8Dialect
# Hibernate ddl auto (none, create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto= none
spring.jpa.show-sql= true
spring.jpa.generate-ddl= true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation= true

## MULTIPART (MultipartProperties)
spring.servlet.multipart.enabled= true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold= 2KB
# Max file size.
spring.servlet.multipart.max-file-size= 200MB
# Max Request Size
spring.servlet.multipart.max-request-size= 215MB

carly.bookings.url=http://52.3.250.46:5050/public/bookings
carly.bookings.token=?apiKey=BTKJPMKRP
parkly.bookings.url=http://parkly-env.eba-u2qumtf7.us-east-2.elasticbeanstalk.com/b/bookings
parkly.bookings.token=?apiKey=1AC4FCOPR
flatly.bookings.url=http://flatly-env.eba-pftr9jj2.eu-central-1.elasticbeanstalk.com/ext/bookings
flatly.bookings.token=?apiKey=savekey

cors.urls=http://localhost:3000,http://bookly-web.herokuapp.com
cors.mappings=/**